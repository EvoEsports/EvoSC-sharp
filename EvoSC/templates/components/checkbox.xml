<?xml version="1.0" encoding="UTF-8"?>
<manialink version="3">
	{{ arr = pos|string.split " " }}
    {{ pos_x = arr|array.first|string.to_float }}
    {{ pos_y = arr|array.last|string.to_float }}

    <frame pos="{{pos_x}} {{pos_y}}" id="{{id}}"  class="uiContainer uiCheckbox {{if group}}uiCheckboxGroup{{end}}" data-group="{{group}}" data-checked="{{checked}}" data-disabled="{{disabled}}" >
    <entry pos="900 900" z-index="0" size="6 6" textemboss="1" text="1" textsize="3" valign="center2" halign="center"
           textformat="Basic" name="{{ name }}" scriptevents="1"/>
    <label pos="6 -2.5" z-index="0" size="100 5" text="{{ text }}" textsize="2" scriptevents="1" focusareacolor1="0000"
           focusareacolor2="0000" valign="center" textfont="GameFontRegular" />
    <label pos="2.5 -2" z-index="0" size="6 6" textemboss="0" textsize="3" scale="0" text="✓" valign="center2"
           halign="center" class="{{class}} uiCheck uiCheckboxElement" />
    <label pos="2 -2.5" z-index="0" size="6 6" textemboss="0" textsize="4" text="⬜" valign="center2" halign="center"
           class="uiCheckboxElement" scriptevents="1" focusareacolor1="0000" focusareacolor2="0000" data-group="{{group}}"/>
    </frame>
    
	<script><!--
	
Void uiRenderCheckbox(CMlFrame frame) {
    declare uiControl = frame.Controls[2];
    declare CMlLabel boxFrame = (frame.Controls[3] as CMlLabel);
    if (frame.DataAttributeGet("disabled") == "1") {
        boxFrame.TextColor = <0.4, 0.4, 0.4>;     
    } else {
        boxFrame.TextColor = <1., 1., 1.>;
    }

    if (frame.DataAttributeGet("checked") == "1") {         
       AnimMgr.Add(uiControl, "<frame scale=\"1.\" />", 150, CAnimManager::EAnimManagerEasing::CircOut);
    } else {        
       AnimMgr.Add(uiControl, "<frame scale=\"0.\" />", 150, CAnimManager::EAnimManagerEasing::CircOut);
	}
    declare CMlEntry entry = (frame.Controls[0] as CMlEntry);
	entry.Value = frame.DataAttributeGet("checked") ;
}

Void uiToggleCheckbox(CMlFrame frame) {
    if (frame.DataAttributeGet("disabled") == "1") {
        return;
    }
    if  (frame.DataAttributeGet("checked") == "1") {
		 frame.DataAttributeSet("checked", "0");
	} else {
		frame.DataAttributeSet("checked", "1");
    }
	uiRenderCheckbox(frame);
}

Void uiSetCheckbox(CMlFrame frame, Boolean status) {
    if (frame.DataAttributeGet("disabled") == "1") {
        return;
    }
	if (status) {
	    frame.DataAttributeSet("checked", "1");
	} else {
	    frame.DataAttributeSet("checked", "0");
	}
	uiRenderCheckbox(frame);
}

***OnInit***
***
Page.GetClassChildren("uiCheckbox", Page.MainFrame, True);
foreach (frame in Page.GetClassChildren_Result) {
        uiRenderCheckbox((frame as CMlFrame));
}
***

***OnMouseClick***
***
if (Event.Control.HasClass("uiCheckboxElement") ) {
    if (Event.Control.Parent.HasClass("uiCheckboxGroup")) {        
        Page.GetClassChildren("uiCheckboxGroup", Page.MainFrame, True);
        declare group = Event.Control.DataAttributeGet("group");
        declare result = Page.GetClassChildren_Result;
        foreach (frame in result) {            
            if (frame.DataAttributeGet("group") == group) {                             
                  uiSetCheckbox((frame as CMlFrame), False);               
            }
        }
        uiSetCheckbox(Event.Control.Parent, True);
    } else {
      if (Event.Control.Parent.HasClass("uiCheckbox")) {
          uiToggleCheckbox(Event.Control.Parent);
      }
    }
}
***
	
	--></script>

</manialink>