//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EvoSC.Modules.Official.Player {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EvoSC.Modules.Official.Player.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player banned and added to the blacklist..
        /// </summary>
        internal static string Audit_Banned {
            get {
                return ResourceManager.GetString("Audit.Banned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player kicked from the server..
        /// </summary>
        internal static string Audit_Kicked {
            get {
                return ResourceManager.GetString("Audit.Kicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player muted from the chat..
        /// </summary>
        internal static string Audit_Muted {
            get {
                return ResourceManager.GetString("Audit.Muted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player was unbanned..
        /// </summary>
        internal static string Audit_Unbanned {
            get {
                return ResourceManager.GetString("Audit.Unbanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player removed from the blacklist..
        /// </summary>
        internal static string Audit_Unblacklisted {
            get {
                return ResourceManager.GetString("Audit.Unblacklisted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player un-muted from the chat..
        /// </summary>
        internal static string Audit_Unmuted {
            get {
                return ResourceManager.GetString("Audit.Unmuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $&lt;{0}$&gt; was banned..
        /// </summary>
        internal static string PlayerBanned {
            get {
                return ResourceManager.GetString("PlayerBanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $&lt;{0}$&gt; joined for the first time!.
        /// </summary>
        internal static string PlayerFirstJoined {
            get {
                return ResourceManager.GetString("PlayerFirstJoined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $&lt;{0}$&gt; joined!.
        /// </summary>
        internal static string PlayerJoined {
            get {
                return ResourceManager.GetString("PlayerJoined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $&lt;{0}$&gt; was kicked..
        /// </summary>
        internal static string PlayerKicked {
            get {
                return ResourceManager.GetString("PlayerKicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to kick the player. Did they leave already?.
        /// </summary>
        internal static string PlayerKickingFailed {
            get {
                return ResourceManager.GetString("PlayerKickingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $&lt;{0}$&gt; was muted..
        /// </summary>
        internal static string PlayerMuted {
            get {
                return ResourceManager.GetString("PlayerMuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to mute the player. Did they leave already?.
        /// </summary>
        internal static string PlayerMutingFailed {
            get {
                return ResourceManager.GetString("PlayerMutingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player with login &apos;{0}&apos; was unbanned..
        /// </summary>
        internal static string PlayerUnbanned {
            get {
                return ResourceManager.GetString("PlayerUnbanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The login &apos;{0}&apos; was not found in the banlist..
        /// </summary>
        internal static string PlayerUnbanningFailed {
            get {
                return ResourceManager.GetString("PlayerUnbanningFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player with login &apos;{0}&apos; removed from the blacklist..
        /// </summary>
        internal static string PlayerUnblacklisted {
            get {
                return ResourceManager.GetString("PlayerUnblacklisted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player with login &apos;{0}&apos; was not found in the blacklist..
        /// </summary>
        internal static string PlayerUnblacklistingFailed {
            get {
                return ResourceManager.GetString("PlayerUnblacklistingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $&lt;{0}$&gt; was muted..
        /// </summary>
        internal static string PlayerUnmuted {
            get {
                return ResourceManager.GetString("PlayerUnmuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to un-mute the player. Did they leave already?.
        /// </summary>
        internal static string PlayerUnmutingFailed {
            get {
                return ResourceManager.GetString("PlayerUnmutingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You got un-muted by an admin..
        /// </summary>
        internal static string YouGotUnmuted {
            get {
                return ResourceManager.GetString("YouGotUnmuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You were muted by an admin..
        /// </summary>
        internal static string YouWereMuted {
            get {
                return ResourceManager.GetString("YouWereMuted", resourceCulture);
            }
        }
    }
}
