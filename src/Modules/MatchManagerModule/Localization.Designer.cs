//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EvoSC.Modules.Official.MatchManagerModule {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EvoSC.Modules.Official.MatchManagerModule.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded mode live..
        /// </summary>
        internal static string Audit_LoadedModeLive {
            get {
                return ResourceManager.GetString("Audit.LoadedModeLive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map skipped..
        /// </summary>
        internal static string Audit_MapSkipped {
            get {
                return ResourceManager.GetString("Audit.MapSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match restarted..
        /// </summary>
        internal static string Audit_MatchRestarted {
            get {
                return ResourceManager.GetString("Audit.MatchRestarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GameMode Script Setting was modified..
        /// </summary>
        internal static string Audit_ModeScriptSettingsModified {
            get {
                return ResourceManager.GetString("Audit.ModeScriptSettingsModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Round ended..
        /// </summary>
        internal static string Audit_RoundEnded {
            get {
                return ResourceManager.GetString("Audit.RoundEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available modes: $fff{0}.
        /// </summary>
        internal static string AvailableModes {
            get {
                return ResourceManager.GetString("AvailableModes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find MatchSettings named &apos;{0}&apos;..
        /// </summary>
        internal static string CannotFindMatchSettings {
            get {
                return ResourceManager.GetString("CannotFindMatchSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while trying to set the script setting: {0e}.
        /// </summary>
        internal static string ErrorOccuredWhenSettingScriptSetting {
            get {
                return ResourceManager.GetString("ErrorOccuredWhenSettingScriptSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set script setting &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string FailedSettingScriptSetting {
            get {
                return ResourceManager.GetString("FailedSettingScriptSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} forced the round to end..
        /// </summary>
        internal static string ForcedRoundEnd {
            get {
                return ResourceManager.GetString("ForcedRoundEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Available modes: $fff{1}.
        /// </summary>
        internal static string LiveModeNotFound {
            get {
                return ResourceManager.GetString("LiveModeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} loaded match settings: {1}.
        /// </summary>
        internal static string LoadedMatchSettings {
            get {
                return ResourceManager.GetString("LoadedMatchSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} restarted the match..
        /// </summary>
        internal static string RestartedMatch {
            get {
                return ResourceManager.GetString("RestartedMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script setting &apos;{0}&apos; was set to: {1}.
        /// </summary>
        internal static string ScriptSettingsSetTo {
            get {
                return ResourceManager.GetString("ScriptSettingsSetTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} skipped to the next map..
        /// </summary>
        internal static string SkippedToNextMap {
            get {
                return ResourceManager.GetString("SkippedToNextMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error occured while trying to load the MatchSettings..
        /// </summary>
        internal static string UnknownErrorWhenLoadingMatchSettings {
            get {
                return ResourceManager.GetString("UnknownErrorWhenLoadingMatchSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong format for script setting..
        /// </summary>
        internal static string WrongScriptSettingFormat {
            get {
                return ResourceManager.GetString("WrongScriptSettingFormat", resourceCulture);
            }
        }
    }
}
